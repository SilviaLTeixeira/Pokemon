[{"C:\\Users\\Pichau\\pokedex-api\\src\\index.js":"1","C:\\Users\\Pichau\\pokedex-api\\src\\App.js":"2","C:\\Users\\Pichau\\pokedex-api\\src\\reportWebVitals.js":"3","C:\\Users\\Pichau\\pokedex-api\\src\\components\\Main.js":"4","C:\\Users\\Pichau\\pokedex-api\\src\\components\\pokemon-detail\\PokemonDetailContainer.js":"5","C:\\Users\\Pichau\\pokedex-api\\src\\components\\item-container\\ItemListContainer.js":"6","C:\\Users\\Pichau\\pokedex-api\\src\\components\\pokemon-detail\\PokemonDetailMobile.js":"7","C:\\Users\\Pichau\\pokedex-api\\src\\components\\item-container\\Pagination.js":"8","C:\\Users\\Pichau\\pokedex-api\\src\\components\\item-container\\ItemList.js":"9","C:\\Users\\Pichau\\pokedex-api\\src\\components\\pokemon-detail\\PokemonDetailDesktop.js":"10","C:\\Users\\Pichau\\pokedex-api\\src\\components\\item-container\\NavBar.js":"11","C:\\Users\\Pichau\\pokedex-api\\src\\components\\item-container\\Item.js":"12","C:\\meusprojetos\\Pokemon\\src\\index.js":"13","C:\\meusprojetos\\Pokemon\\src\\reportWebVitals.js":"14","C:\\meusprojetos\\Pokemon\\src\\App.js":"15","C:\\meusprojetos\\Pokemon\\src\\components\\Main.js":"16","C:\\meusprojetos\\Pokemon\\src\\components\\pokemon-detail\\PokemonDetailContainer.js":"17","C:\\meusprojetos\\Pokemon\\src\\components\\item-container\\ItemListContainer.js":"18","C:\\meusprojetos\\Pokemon\\src\\components\\pokemon-detail\\PokemonDetailDesktop.js":"19","C:\\meusprojetos\\Pokemon\\src\\components\\pokemon-detail\\PokemonDetailMobile.js":"20","C:\\meusprojetos\\Pokemon\\src\\components\\item-container\\Pagination.js":"21","C:\\meusprojetos\\Pokemon\\src\\components\\item-container\\ItemList.js":"22","C:\\meusprojetos\\Pokemon\\src\\components\\item-container\\NavBar.js":"23","C:\\meusprojetos\\Pokemon\\src\\components\\item-container\\Item.js":"24"},{"size":531,"mtime":1657405501357,"results":"25","hashOfConfig":"26"},{"size":1474,"mtime":1657391206676,"results":"27","hashOfConfig":"26"},{"size":375,"mtime":1657390494096,"results":"28","hashOfConfig":"26"},{"size":1183,"mtime":1657390977224,"results":"29","hashOfConfig":"26"},{"size":2829,"mtime":1657390494096,"results":"30","hashOfConfig":"26"},{"size":3904,"mtime":1657390494094,"results":"31","hashOfConfig":"26"},{"size":7701,"mtime":1657390494096,"results":"32","hashOfConfig":"26"},{"size":3324,"mtime":1657390494095,"results":"33","hashOfConfig":"26"},{"size":515,"mtime":1657390494093,"results":"34","hashOfConfig":"26"},{"size":7869,"mtime":1657390494096,"results":"35","hashOfConfig":"26"},{"size":1578,"mtime":1657394497565,"results":"36","hashOfConfig":"26"},{"size":1999,"mtime":1657390494092,"results":"37","hashOfConfig":"26"},{"size":531,"mtime":1657405501357,"results":"38","hashOfConfig":"39"},{"size":375,"mtime":1657390494096,"results":"40","hashOfConfig":"39"},{"size":1474,"mtime":1657391206676,"results":"41","hashOfConfig":"39"},{"size":1183,"mtime":1657390977224,"results":"42","hashOfConfig":"39"},{"size":2829,"mtime":1657390494096,"results":"43","hashOfConfig":"39"},{"size":3904,"mtime":1657390494094,"results":"44","hashOfConfig":"39"},{"size":7869,"mtime":1657390494096,"results":"45","hashOfConfig":"39"},{"size":7701,"mtime":1657390494096,"results":"46","hashOfConfig":"39"},{"size":3324,"mtime":1657390494095,"results":"47","hashOfConfig":"39"},{"size":515,"mtime":1657390494093,"results":"48","hashOfConfig":"39"},{"size":1578,"mtime":1657394497565,"results":"49","hashOfConfig":"39"},{"size":1999,"mtime":1657390494092,"results":"50","hashOfConfig":"39"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lg9t7m",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dj11b",{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Pichau\\pokedex-api\\src\\index.js",[],[],"C:\\Users\\Pichau\\pokedex-api\\src\\App.js",["131"],[],"import { BrowserRouter } from \"react-router-dom\";\r\nimport Main from \"./components/Main\";\r\nimport { useState, React } from \"react\";\r\nimport logo from \"./assets/items/pokemon.png\";\r\n\r\nfunction App() {\r\n  const [start, setStart] = useState(false);\r\n\r\n\r\n  const startPokedex = () => {\r\n    setStart(true);\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter className=\"App\">\r\n      {start ? (\r\n        <Main />\r\n      ) : (\r\n        <div className=\"start-menu\">\r\n          <div className=\"red-background position-start-item\">\r\n            <img src={logo} />\r\n          </div>\r\n          <div className=\"ball-middle\"></div>\r\n          <div className=\"white-background position-start-item\">\r\n            <div className=\"center\" onClick={startPokedex}>\r\n              <button className=\"btn\">\r\n                <svg\r\n                  width=\"180px\"\r\n                  height=\"50px\"\r\n                  viewBox=\"0 0 180 50\"\r\n                  className=\"border\"\r\n                >\r\n                  <polyline\r\n                    points=\"179,1 179,59 1,59 1,1 179,1\"\r\n                    className=\"bg-line\"\r\n                  />\r\n                  <polyline\r\n                    points=\"179,1 179,59 1,59 1,1 179,1\"\r\n                    className=\"hl-line\"\r\n                  />\r\n                </svg>\r\n                <span>Veja os Pokemons</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Pichau\\pokedex-api\\src\\reportWebVitals.js",[],[],"C:\\Users\\Pichau\\pokedex-api\\src\\components\\Main.js",[],[],"C:\\Users\\Pichau\\pokedex-api\\src\\components\\pokemon-detail\\PokemonDetailContainer.js",["132","133","134"],[],"import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport PokemonDetailDesktop from \"./PokemonDetailDesktop\";\r\nimport PokemonDetailMobile from \"./PokemonDetailMobile\";\r\n\r\nconst PokemonDetailContainer = () => {\r\n  let { pokemonName } = useParams();\r\n\r\n  const [pokemonDetails, setPokemonDetails] = useState({});\r\n  const [pokemonSpecies, setPokemonSpecies] = useState({});\r\n  let [chainInfo, setChainInfo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios(`https://pokeapi.co/api/v2/pokemon/${pokemonName}`).then((res) => {\r\n      const { data } = res;\r\n      //console.log(data);\r\n      setPokemonDetails(null);\r\n      setPokemonDetails({\r\n        id: data.id,\r\n        name: data.name,\r\n        statsName: data.stats.map((items) => items.stat.name),\r\n        statsRes: data.stats.map((items) => items.base_stat),\r\n        types: data.types.map((items) => items.type.name),\r\n        moves: data.moves.map((items) => items.move.name),\r\n        abilities: data.abilities.map((items) => items.ability.name),\r\n        image: data.sprites.other.dream_world.front_default,\r\n        height: data.height,\r\n        weight: data.weight,\r\n        exp: data.base_experience,\r\n      });\r\n    });\r\n\r\n    axios(`https://pokeapi.co/api/v2/pokemon-species/${pokemonName}`)\r\n      .then((res) => {\r\n        const { data } = res;\r\n        //console.log(data)\r\n        let fixedDescription = data.flavor_text_entries[0].flavor_text.replace(\r\n          /\f/g,\r\n          \" \"\r\n        );\r\n\r\n        setChainInfo(data.evolution_chain.url);\r\n        setPokemonSpecies({\r\n          description: fixedDescription,\r\n          species: data.genera[7].genus,\r\n          captureRate: data.capture_rate,\r\n          growRate: data.growth_rate.name,\r\n          habitat: data.habitat.name,\r\n        });\r\n      })\r\n\r\n      .catch((err) => {\r\n        toast.error(\"There was an error in loading the Pokemons\");\r\n      });\r\n  }, [pokemonName]);\r\n\r\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n  const maxWidth = 1150;\r\n\r\n  useEffect(() => {\r\n    const widthChange = () => setScreenWidth(window.innerWidth);\r\n\r\n    window.addEventListener(\"resize\", widthChange);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", widthChange);\r\n    };\r\n  }, [screenWidth]);\r\n\r\n  return (\r\n    <div className=\"detail-pokemon-container\">\r\n      {screenWidth < maxWidth ? (\r\n        <PokemonDetailMobile\r\n          pokemondetail={pokemonDetails}\r\n          pokemonespecies={pokemonSpecies}\r\n        />\r\n      ) : (\r\n        <PokemonDetailDesktop\r\n          pokemondetail={pokemonDetails}\r\n          pokemonespecies={pokemonSpecies}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonDetailContainer;\r\n","C:\\Users\\Pichau\\pokedex-api\\src\\components\\item-container\\ItemListContainer.js",["135","136","137"],[],"import { useEffect, useState } from \"react\";\r\nimport ItemList from \"./ItemList\";\r\nimport Pagination from \"./Pagination\";\r\nimport NavBar from \"./NavBar\";\r\nimport axios from \"axios\";\r\nimport { Howl } from \"howler\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport SoundSrc from \"../../assets/sounds/select.mp3\";\r\n\r\n\r\nfunction ItemListContainer() {\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [pokemonsTypes, setPokemonsTypes] = useState([]);\r\n\r\n  const [loadPokemon] = useState(\r\n    \"https://pokeapi.co/api/v2/pokemon?limit=460&offset=0\"\r\n  );\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(12);\r\n\r\n  useEffect(() => {\r\n    const getAllPokemons = async (e) => {\r\n      try {\r\n        const res = await fetch(loadPokemon);\r\n        const data = await res.json();\r\n\r\n        function createPokemonObject(results) {\r\n          results.forEach(async (pokemon) => {\r\n            const res = await fetch(\r\n              `https://pokeapi.co/api/v2/pokemon/${pokemon.name}`\r\n            );\r\n            const data = await res.json();\r\n            setPokemons((list) => [...list, data]);\r\n          });\r\n        }\r\n        createPokemonObject(data.results);\r\n\r\n        axios(`https://pokeapi.co/api/v2/type`).then((res) => {\r\n          const { data } = res;\r\n\r\n          let resulta = data.results.map((a) => a.name);\r\n          resulta.unshift(\"All Types\");\r\n          let removeType = resulta.indexOf(\"Shadow\");\r\n          resulta.splice(removeType,1);\r\n          resulta.pop();\r\n          setPokemonsTypes(resulta);\r\n\r\n        });\r\n      } catch (error) {\r\n        toast.error(\"There was an error in loading the Pokemons\");\r\n      }\r\n    };\r\n    getAllPokemons();\r\n  }, []);\r\n\r\n  const [pokemonFilter, setPokeFilter] = useState(pokemons);\r\n  let currentPosts;\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n\r\n  if (pokemonFilter == !pokemons) {\r\n    pokemons.sort((a, b) => (a.id > b.id ? 1 : -1));\r\n    currentPosts = pokemons.slice(indexOfFirstPost, indexOfLastPost);\r\n    pokemons.slice(indexOfFirstPost, indexOfLastPost);\r\n  } else {\r\n    pokemonFilter.sort((a, b) => (a.id > b.id ? 1 : -1));\r\n    currentPosts = pokemonFilter.slice(indexOfFirstPost, indexOfLastPost);\r\n    pokemonFilter.slice(indexOfFirstPost, indexOfLastPost);\r\n  }\r\n\r\n  const searchFilterFunction = (term) => {\r\n    setPokeFilter(\r\n      pokemons.filter((pokemon) =>\r\n        pokemon.name.toLowerCase().includes(term.toLowerCase())\r\n      )\r\n    );\r\n    const typeFilterReset = document.querySelector(\"#typeFilter\");\r\n    typeFilterReset.value = \"All Types\";\r\n    setCurrentPage(1)\r\n  };\r\n\r\n  const typeFilterFunction = (term) => {\r\n    setPokeFilter(\r\n      pokemons.filter((pokemon) =>\r\n        pokemon.types?.map((t) => t.type.name).includes(term.toLowerCase())\r\n      )\r\n    );\r\n    const searchFilterReset = document.querySelector(\"#searchFilter\");\r\n    searchFilterReset.value = \"\";\r\n    setCurrentPage(1)\r\n  };\r\n\r\n  const callMySound = (src) => {\r\n    const sound = new Howl({\r\n      src,\r\n      html5: true,\r\n    });\r\n    sound.play();\r\n  };\r\n\r\n  const paginate = (pageNumber) => {\r\n  setCurrentPage(pageNumber);\r\n  callMySound(SoundSrc);\r\n}\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"all-container\">\r\n        <NavBar\r\n          pokemonsTypes={pokemonsTypes}\r\n          typeFilterFunction={typeFilterFunction}\r\n          searchFilterFunction={searchFilterFunction}\r\n        />\r\n\r\n        <ItemList pokemon={currentPosts} />\r\n\r\n        <Pagination\r\n          postsPerPage={postsPerPage}\r\n          totalPosts={pokemons.length}\r\n          paginate={paginate}\r\n          currentPage={currentPage}\r\n          setCurrentPage={setCurrentPage}\r\n          pokemonFilter={pokemonFilter}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default ItemListContainer;\r\n","C:\\Users\\Pichau\\pokedex-api\\src\\components\\pokemon-detail\\PokemonDetailMobile.js",["138"],[],"import React from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Howl } from \"howler\";\r\nimport SoundSrc from \"../../assets/sounds/select.mp3\";\r\nimport backWhite from \"../../assets/items/backWhite.png\";\r\nimport {LazyLoadImage} from \"react-lazy-load-image-component\";\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\r\n\r\nconst PokemonDetailDesktop = (props) => {\r\n  const containerColorDetail = props.pokemondetail.types\r\n    ? props.pokemondetail.types[0] + \" detail-container-mobile\"\r\n    : \"\";\r\n\r\n  const callMySound = (src) => {\r\n    const sound = new Howl({\r\n      src,\r\n      html5: true,\r\n    });\r\n    sound.play();\r\n  };\r\n  return (\r\n    <div className={containerColorDetail}>\r\n      <Link className=\"back-link-mobile\" to={\"/\"}>\r\n        <img\r\n          src={backWhite}\r\n          onClick={() => callMySound(SoundSrc)}\r\n          width=\"50px\"\r\n        />\r\n      </Link>\r\n      <div className=\"detail-pokemon-selected-mobile\">\r\n        <div className=\"detail-pokemon-mobile\">\r\n          <div className=\"name-type-mobile\">\r\n            <h2 className=\"capitalize-first-letter \">\r\n              {props.pokemondetail.name}\r\n            </h2>\r\n            <ul className=\"pokemon-detail-types-cont\">\r\n              {props.pokemondetail.types?.map((type, index) => (\r\n                <li\r\n                  className=\"capitalize-first-letter pokemon-type-container pokemon-type-container-detail-mobile\"\r\n                  key={index}\r\n                >\r\n                  <div\r\n                    className={\r\n                      props.pokemondetail.types[index] +\r\n                      \"-type-detail type-badge-detail\"\r\n                    }\r\n                  ></div>\r\n                  <span className=\"capitalize-first-letter\">{type}</span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <LazyLoadImage\r\n            alt={props.pokemondetail.name}\r\n            src={props.pokemondetail.image}\r\n            width={\"100%\"}\r\n            height={\"270px\"}\r\n            visibleByDefault={false}\r\n            delayMethod={\"debounce\"}\r\n            effect=\"blur\"\r\n          />\r\n        </div>\r\n        <div className=\"detail-pokemon-detail-mobile\">\r\n          <Tabs>\r\n            <TabList>\r\n              <Tab\r\n                className=\"detail-tab font-bold\"\r\n                onClick={() => callMySound(SoundSrc)}\r\n              >\r\n                About\r\n              </Tab>\r\n              <Tab\r\n                className=\"detail-tab font-bold\"\r\n                onClick={() => callMySound(SoundSrc)}\r\n              >\r\n                Base Stats\r\n              </Tab>\r\n              <Tab\r\n                className=\"detail-tab font-bold\"\r\n                onClick={() => callMySound(SoundSrc)}\r\n              >\r\n                Moves\r\n              </Tab>\r\n            </TabList>\r\n            <TabPanel>\r\n              <h2 className=\"description-tittle\">Description</h2>\r\n              <p className=\"description-pokemon\">\r\n                {props.pokemonespecies.description}\r\n              </p>\r\n\r\n              <div>\r\n                <div className=\"about-detail\">\r\n                  <span className=\"about-detail-item\">Pokedex Id</span>\r\n                  <span className=\"capitalize-first-letter\">\r\n                    N° {props.pokemondetail.id}\r\n                  </span>\r\n                </div>\r\n                <div className=\"about-detail\">\r\n                  <span className=\"about-detail-item\">Species</span>\r\n                  <span className=\"capitalize-first-letter\">\r\n                    {props.pokemonespecies.species}\r\n                  </span>\r\n                </div>\r\n                <div className=\"about-detail\">\r\n                  <span className=\"about-detail-item\">Habitat</span>\r\n                  <span className=\"capitalize-first-letter\">\r\n                    {props.pokemonespecies.habitat}\r\n                  </span>\r\n                </div>\r\n\r\n                <div className=\"about-detail\">\r\n                  <span className=\"about-detail-item\">Height</span>\r\n                  <span className=\"capitalize-first-letter\">\r\n                    {props.pokemondetail.height / 10}M\r\n                  </span>\r\n                </div>\r\n                <div className=\"about-detail\">\r\n                  <span className=\"about-detail-item\">Weight</span>\r\n                  <span className=\"capitalize-first-letter\">\r\n                    {props.pokemondetail.weight / 10}Kg\r\n                  </span>\r\n                </div>\r\n                <div className=\"about-detail\">\r\n                  <span className=\"about-detail-item\">Base Exp</span>\r\n                  <span className=\"capitalize-first-letter\">\r\n                    {props.pokemondetail.exp}\r\n                  </span>\r\n                </div>\r\n                <div className=\"about-detail\">\r\n                  <span className=\"about-detail-item\">Capture Rate</span>\r\n                  <span className=\"capitalize-first-letter\">\r\n                    {((props.pokemonespecies.captureRate / 255) * 100).toFixed(\r\n                      1\r\n                    )}\r\n                    %\r\n                  </span>\r\n                </div>\r\n                <div className=\"about-detail\">\r\n                  <span className=\"about-detail-item\">Grow Rate</span>\r\n                  <span className=\"capitalize-first-letter\">\r\n                    {props.pokemonespecies.growRate}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </TabPanel>\r\n\r\n            <TabPanel>\r\n              <div className=\"stat-abilities-flex\">\r\n                <h2 className=\"description-tittle\">Abilities</h2>\r\n                <ul className=\"list-style-none pokemon-abilities\">\r\n                  {props.pokemondetail.abilities?.map((abilities, index) => (\r\n                    <li className=\"capitalize-first-letter\" key={index}>\r\n                      {abilities}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n              <div className=\"stat-abilities-cont\">\r\n                <h2 className=\"description-tittle\">Stats</h2>\r\n                <ul className=\"list-style-none\">\r\n                  {props.pokemondetail.statsName?.map((stats, index) => (\r\n                    <li\r\n                      className=\"capitalize-first-letter about-detail\"\r\n                      key={index}\r\n                    >\r\n                      <div className=\"stat-name-mobile\">\r\n                        <span className=\"about-detail-item\">{stats}: </span>\r\n                      </div>\r\n                      <div className=\"stats-data\">\r\n                        <span>{props.pokemondetail.statsRes[index]}</span>\r\n                        <progress\r\n                          max=\"200\"\r\n                          value={props.pokemondetail.statsRes[index]}\r\n                        ></progress>\r\n                        <span>200</span>\r\n                      </div>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </TabPanel>\r\n\r\n            <TabPanel>\r\n              <ul className=\"test list-style-none\">\r\n                {props.pokemondetail.moves?.map((moves, index) => (\r\n                  <li\r\n                    className=\"capitalize-first-letter moves-item\"\r\n                    key={index}\r\n                  >\r\n                    {moves}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </TabPanel>\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PokemonDetailDesktop;\r\n","C:\\Users\\Pichau\\pokedex-api\\src\\components\\item-container\\Pagination.js",["139"],[],"import { useEffect, useState } from \"react\";\r\nimport { Howl } from \"howler\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport SoundSrc from \"../../assets/sounds/select.mp3\";\r\n\r\nconst Pagination = ({\r\n  postsPerPage,\r\n  totalPosts,\r\n  paginate,\r\n  currentPage,\r\n  setCurrentPage,\r\n  pokemonFilter,\r\n}) => {\r\n  const [maxPageNumberLimit, setMaxPageNumberLimit] = useState(5);\r\n  const [minPageNumberLimit, setMinPageNumberLimit] = useState(0);\r\n  const pageNumberLimit = 5;\r\n  let pageNumbers = [];\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const promesa = new Promise((res, rej) => {\r\n      setTimeout(() => {\r\n        res(Pagination);\r\n      }, 1500);\r\n    });\r\n    promesa\r\n      .catch((rej) => {\r\n        toast.error(\"There was an error in loading the Pagination\");\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setMinPageNumberLimit(0);\r\n    setMaxPageNumberLimit(5);\r\n  }, [totalPosts]);\r\n\r\n  if (pokemonFilter.length >= 1) {\r\n    for (let i = 1; i <= Math.ceil(pokemonFilter.length / postsPerPage); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n  } else {\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n  }\r\n\r\n  const prevButton = (e) => {\r\n    setCurrentPage((prev) => (prev === 1 ? prev : prev - 1));\r\n    if (currentPage - 1 === minPageNumberLimit) {\r\n      setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n      setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n    }\r\n    callMySound(SoundSrc);\r\n  };\r\n\r\n  const nextButton = (e) => {\r\n    setCurrentPage((next) => (next === pageNumbers.length ? next : next + 1));\r\n    if (currentPage + 1 > maxPageNumberLimit) {\r\n      setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n      setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n    }\r\n    callMySound(SoundSrc);\r\n  };\r\n\r\n  const callMySound = (src) => {\r\n    const sound = new Howl({\r\n      src,\r\n      html5: true,\r\n    });\r\n    sound.play();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? null : (\r\n        <nav className=\"pagination-nav\">\r\n          <button\r\n            className={`btn-pag ${currentPage === 1 ? \"disabled\" : \"\"}`}\r\n            onClick={prevButton}\r\n            disabled={currentPage === 1}\r\n          >\r\n            Prev\r\n          </button>\r\n          <ul className=\"pagination\">\r\n            {pageNumbers.map(\r\n              (number) =>\r\n                number < maxPageNumberLimit + 1 &&\r\n                number > minPageNumberLimit && (\r\n                  <li\r\n                    key={number}\r\n                    onClick={() => paginate(number)}\r\n                    className={`numbers ${\r\n                      currentPage === number ? \"active\" : \"\"\r\n                    }`}\r\n                  >\r\n                    {number}\r\n                  </li>\r\n                )\r\n            )}\r\n          </ul>\r\n          <button\r\n            className={`btn-pag ${\r\n              currentPage === pageNumbers.length ? \"disabled\" : \"\"\r\n            }`}\r\n            onClick={nextButton}\r\n            disabled={currentPage === pageNumbers.length}\r\n          >\r\n            Next\r\n          </button>\r\n        </nav>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","C:\\Users\\Pichau\\pokedex-api\\src\\components\\item-container\\ItemList.js",[],[],"C:\\Users\\Pichau\\pokedex-api\\src\\components\\pokemon-detail\\PokemonDetailDesktop.js",["140","141","142"],[],"import { React, useState, useEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Howl } from \"howler\";\r\nimport SoundSrc from \"../../assets/sounds/select.mp3\";\r\nimport back from \"../../assets/items/back.png\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\r\n\r\nconst PokemonDetailDesktop = (props) => {\r\n  const containerColorDetail = props.pokemondetail.types\r\n    ? props.pokemondetail.types[0] + \" detail-container\"\r\n    : \"\";\r\n\r\n  const callMySound = (src) => {\r\n    const sound = new Howl({\r\n      src,\r\n      html5: true,\r\n    });\r\n    sound.play();\r\n  };\r\n\r\n  const typeCont = document.querySelector(\".pokemon-detail-types-cont\");\r\n\r\n  if (props.pokemondetail.types) {\r\n    if (props.pokemondetail.types[1]) {\r\n      typeCont.setAttribute(\"style\", \"justify-content: space-between\");\r\n    } else {\r\n      typeCont.setAttribute(\"style\", \"justify-content: center\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={containerColorDetail}>\r\n      <Link className=\"back-link\" to={\"/\"}>\r\n        <img src={back} onClick={() => callMySound(SoundSrc)} width=\"50px\" />\r\n      </Link>\r\n      <div className=\"detail-pokemon-selected\">\r\n        <div className=\"detail-pokemon detail-bubble1\">\r\n          <h2 className=\"capitalize-first-letter pokemon-detail-name\">\r\n            {props.pokemondetail.name}\r\n          </h2>\r\n          <LazyLoadImage\r\n            alt={props.pokemondetail.name}\r\n            src={props.pokemondetail.image}\r\n            width={\"100%\"}\r\n            height={\"75%\"}\r\n            visibleByDefault={false}\r\n            delayMethod={\"debounce\"}\r\n            effect=\"blur\"\r\n          />\r\n\r\n          <ul className=\"pokemon-detail-types-cont\">\r\n            {props.pokemondetail.types?.map((type, index) => (\r\n              <li\r\n                className=\"capitalize-first-letter pokemon-type-container pokemon-type-container-detail\"\r\n                key={index}\r\n              >\r\n                <div\r\n                  className={\r\n                    props.pokemondetail.types[index] +\r\n                    \"-type-detail type-badge-detail\"\r\n                  }\r\n                ></div>\r\n                <span className=\"capitalize-first-letter\">{type}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"detail-pokemon-detail detail-bubble2\">\r\n          <Tabs>\r\n            <TabList>\r\n              <Tab\r\n                className=\"detail-tab font-bold\"\r\n                onClick={() => callMySound(SoundSrc)}\r\n              >\r\n                About\r\n              </Tab>\r\n              <Tab\r\n                className=\"detail-tab font-bold\"\r\n                onClick={() => callMySound(SoundSrc)}\r\n              >\r\n                Base Stats\r\n              </Tab>\r\n              <Tab\r\n                className=\"detail-tab font-bold\"\r\n                onClick={() => callMySound(SoundSrc)}\r\n              >\r\n                Moves\r\n              </Tab>\r\n            </TabList>\r\n            <TabPanel>\r\n              <h2 className=\"description-tittle\">Description</h2>\r\n              <p className=\"description-pokemon\">\r\n                {props.pokemonespecies.description}\r\n              </p>\r\n\r\n              <div>\r\n                <div className=\"about-detail\">\r\n                  <span className=\"about-detail-item\">Pokedex Id</span>\r\n                  <span className=\"capitalize-first-letter\">\r\n                    N° {props.pokemondetail.id}\r\n                  </span>\r\n                </div>\r\n                <div className=\"about-detail\">\r\n                  <span className=\"about-detail-item\">Species</span>\r\n                  <span className=\"capitalize-first-letter\">\r\n                    {props.pokemonespecies.species}\r\n                  </span>\r\n                </div>\r\n                <div className=\"about-detail\">\r\n                  <span className=\"about-detail-item\">Habitat</span>\r\n                  <span className=\"capitalize-first-letter\">\r\n                    {props.pokemonespecies.habitat}\r\n                  </span>\r\n                </div>\r\n\r\n                <div className=\"about-detail\">\r\n                  <span className=\"about-detail-item\">Height</span>\r\n                  <span className=\"capitalize-first-letter\">\r\n                    {props.pokemondetail.height / 10}M\r\n                  </span>\r\n                </div>\r\n                <div className=\"about-detail\">\r\n                  <span className=\"about-detail-item\">Weight</span>\r\n                  <span className=\"capitalize-first-letter\">\r\n                    {props.pokemondetail.weight / 10}Kg\r\n                  </span>\r\n                </div>\r\n                <div className=\"about-detail\">\r\n                  <span className=\"about-detail-item\">Base Exp</span>\r\n                  <span className=\"capitalize-first-letter\">\r\n                    {props.pokemondetail.exp}\r\n                  </span>\r\n                </div>\r\n                <div className=\"about-detail\">\r\n                  <span className=\"about-detail-item\">Capture Rate</span>\r\n                  <span className=\"capitalize-first-letter\">\r\n                    {((props.pokemonespecies.captureRate / 255) * 100).toFixed(\r\n                      1\r\n                    )}\r\n                    %\r\n                  </span>\r\n                </div>\r\n                <div className=\"about-detail\">\r\n                  <span className=\"about-detail-item\">Grow Rate</span>\r\n                  <span className=\"capitalize-first-letter\">\r\n                    {props.pokemonespecies.growRate}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </TabPanel>\r\n\r\n            <TabPanel>\r\n              <div className=\"stat-abilities-flex\">\r\n                <h2 className=\"description-tittle\">Abilities</h2>\r\n                <ul className=\"list-style-none pokemon-abilities\">\r\n                  {props.pokemondetail.abilities?.map((abilities, index) => (\r\n                    <li className=\"capitalize-first-letter\" key={index}>\r\n                      {abilities}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n              <div className=\"stat-abilities-cont\">\r\n                <h2 className=\"description-tittle\">Stats</h2>\r\n                <ul className=\"list-style-none\">\r\n                  {props.pokemondetail.statsName?.map((stats, index) => (\r\n                    <li\r\n                      className=\"capitalize-first-letter about-detail\"\r\n                      key={index}\r\n                    >\r\n                      <div>\r\n                        <span className=\"about-detail-item\">{stats}: </span>\r\n                      </div>\r\n                      <div className=\"stats-data\">\r\n                        <span>{props.pokemondetail.statsRes[index]}</span>\r\n                        <progress\r\n                          max=\"200\"\r\n                          value={props.pokemondetail.statsRes[index]}\r\n                        ></progress>\r\n                        <span>200</span>\r\n                      </div>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </TabPanel>\r\n\r\n            <TabPanel>\r\n              <ul className=\"test list-style-none\">\r\n                {props.pokemondetail.moves?.map((moves, index) => (\r\n                  <li\r\n                    className=\"capitalize-first-letter moves-item\"\r\n                    key={index}\r\n                  >\r\n                    {moves}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </TabPanel>\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PokemonDetailDesktop;\r\n","C:\\Users\\Pichau\\pokedex-api\\src\\components\\item-container\\NavBar.js",["143"],[],"import logo from \"../../assets/items/pokemon.png\";\r\nimport { Howl } from \"howler\";\r\nimport SoundSrc from \"../../assets/sounds/select.mp3\";\r\n\r\nconst NavBar = ({\r\n  pokemonsTypes,\r\n  searchFilterFunction,\r\n  typeFilterFunction,\r\n}) => {\r\n  const callMySound = (src) => {\r\n    const sound = new Howl({\r\n      src,\r\n      html5: true,\r\n    });\r\n    sound.play();\r\n  };\r\n\r\n  return (\r\n    <nav className=\"nav-bar\">\r\n      <img\r\n        src={logo}\r\n        className=\"logo\"\r\n        height=\"50px\"\r\n        onClick={() => callMySound(SoundSrc)}\r\n      />\r\n\r\n      <div className=\"filters\">\r\n        <div className=\"search-container\">\r\n          <input\r\n            className=\"search-input\"\r\n            id=\"searchFilter\"\r\n            type=\"text\"\r\n            placeholder=\"Pokemon search...\"\r\n            onChange={(event) => searchFilterFunction(event.target.value)}\r\n            onClick={() => callMySound(SoundSrc)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"box\">\r\n          <select\r\n            className=\"decoration\"\r\n            id=\"typeFilter\"\r\n            onChange={(event) => typeFilterFunction(event.target.value)}\r\n            onClick={() => callMySound(SoundSrc)}\r\n          >\r\n            {pokemonsTypes?.map((type, index) => (\r\n              <option className=\"option-type\" key={index} value={type}>\r\n                {pokemonsTypes[index].charAt(0).toUpperCase() +\r\n                  pokemonsTypes[index].slice(1)}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\Pichau\\pokedex-api\\src\\components\\item-container\\Item.js",["144"],[],"import { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Howl } from \"howler\";\r\nimport SoundSrc from \"../../assets/sounds/select.mp3\";\r\nimport {LazyLoadImage} from \"react-lazy-load-image-component\";\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\r\n\r\nconst Item = (props) => {\r\n  const callMySound = (src) => {\r\n    const sound = new Howl({\r\n      src,\r\n      html5: true,\r\n    });\r\n    sound.play();\r\n  };\r\n\r\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n  const maxWidth = 650;\r\n  let containerColor = \"\";\r\n  useEffect(() => {\r\n    const widthChange = () => setScreenWidth(window.innerWidth);\r\n\r\n    window.addEventListener(\"resize\", widthChange);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", widthChange);\r\n    };\r\n  }, [screenWidth]);\r\n\r\n  {\r\n    screenWidth < maxWidth\r\n      ? (containerColor = props.type[0] + \" thumb-container width-image\")\r\n      : (containerColor = props.type[0] + \" thumb-container\");\r\n  }\r\n\r\n  return (\r\n    <article key={props.id} onClick={() => callMySound(SoundSrc)}>\r\n      <Link className={containerColor} to={`/pokemon/${props.name}`}>\r\n        <LazyLoadImage\r\n          alt={props.name}\r\n          src={props.image}\r\n          width={screenWidth < maxWidth ? \"75px\" : \"\"}\r\n          visibleByDefault={false}\r\n          delayMethod={\"debounce\"}\r\n          effect=\"blur\"\r\n          className=\"pokemon-image\"\r\n        />\r\n\r\n        <div className=\"detail-wrapper\">\r\n          <h3 className=\"capitalize-first-letter font-bold\">{props.name}</h3>\r\n          <ul>\r\n            {props.type?.map((type, index) => (\r\n              <li key={index} className=\"pokemon-type-container\">\r\n                <div className={props.type[index] + \"-type type-badge\"}></div>\r\n                <span className=\"capitalize-first-letter\">{type}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </Link>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","C:\\meusprojetos\\Pokemon\\src\\index.js",[],[],"C:\\meusprojetos\\Pokemon\\src\\reportWebVitals.js",[],[],"C:\\meusprojetos\\Pokemon\\src\\App.js",["145"],[],"C:\\meusprojetos\\Pokemon\\src\\components\\Main.js",[],[],"C:\\meusprojetos\\Pokemon\\src\\components\\pokemon-detail\\PokemonDetailContainer.js",["146","147","148"],[],"C:\\meusprojetos\\Pokemon\\src\\components\\item-container\\ItemListContainer.js",["149","150","151"],[],"C:\\meusprojetos\\Pokemon\\src\\components\\pokemon-detail\\PokemonDetailDesktop.js",["152","153","154"],[],"C:\\meusprojetos\\Pokemon\\src\\components\\pokemon-detail\\PokemonDetailMobile.js",["155"],[],"C:\\meusprojetos\\Pokemon\\src\\components\\item-container\\Pagination.js",["156"],[],"C:\\meusprojetos\\Pokemon\\src\\components\\item-container\\ItemList.js",[],[],"C:\\meusprojetos\\Pokemon\\src\\components\\item-container\\NavBar.js",["157"],[],"C:\\meusprojetos\\Pokemon\\src\\components\\item-container\\Item.js",["158"],[],{"ruleId":"159","severity":1,"message":"160","line":21,"column":13,"nodeType":"161","endLine":21,"endColumn":31},{"ruleId":"162","severity":1,"message":"163","line":4,"column":10,"nodeType":"164","messageId":"165","endLine":4,"endColumn":24},{"ruleId":"162","severity":1,"message":"166","line":13,"column":8,"nodeType":"164","messageId":"165","endLine":13,"endColumn":17},{"ruleId":"167","severity":1,"message":"168","line":40,"column":11,"nodeType":"169","messageId":"170","endLine":40,"endColumn":15},{"ruleId":"162","severity":1,"message":"163","line":7,"column":10,"nodeType":"164","messageId":"165","endLine":7,"endColumn":24},{"ruleId":"171","severity":1,"message":"172","line":54,"column":6,"nodeType":"173","endLine":54,"endColumn":8,"suggestions":"174"},{"ruleId":"175","severity":1,"message":"176","line":61,"column":21,"nodeType":"177","messageId":"170","endLine":61,"endColumn":23},{"ruleId":"159","severity":1,"message":"160","line":26,"column":9,"nodeType":"161","endLine":30,"endColumn":11},{"ruleId":"162","severity":1,"message":"163","line":3,"column":10,"nodeType":"164","messageId":"165","endLine":3,"endColumn":24},{"ruleId":"162","severity":1,"message":"178","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":25},{"ruleId":"162","severity":1,"message":"179","line":1,"column":27,"nodeType":"164","messageId":"165","endLine":1,"endColumn":36},{"ruleId":"159","severity":1,"message":"160","line":37,"column":9,"nodeType":"161","endLine":37,"endColumn":78},{"ruleId":"159","severity":1,"message":"160","line":20,"column":7,"nodeType":"161","endLine":25,"endColumn":9},{"ruleId":"180","severity":1,"message":"181","line":30,"column":3,"nodeType":"182","messageId":"183","endLine":34,"endColumn":4},{"ruleId":"159","severity":1,"message":"160","line":21,"column":13,"nodeType":"161","endLine":21,"endColumn":31},{"ruleId":"162","severity":1,"message":"163","line":4,"column":10,"nodeType":"164","messageId":"165","endLine":4,"endColumn":24},{"ruleId":"162","severity":1,"message":"166","line":13,"column":8,"nodeType":"164","messageId":"165","endLine":13,"endColumn":17},{"ruleId":"167","severity":1,"message":"168","line":40,"column":11,"nodeType":"169","messageId":"170","endLine":40,"endColumn":15},{"ruleId":"162","severity":1,"message":"163","line":7,"column":10,"nodeType":"164","messageId":"165","endLine":7,"endColumn":24},{"ruleId":"171","severity":1,"message":"172","line":54,"column":6,"nodeType":"173","endLine":54,"endColumn":8,"suggestions":"184"},{"ruleId":"175","severity":1,"message":"176","line":61,"column":21,"nodeType":"177","messageId":"170","endLine":61,"endColumn":23},{"ruleId":"162","severity":1,"message":"178","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":25},{"ruleId":"162","severity":1,"message":"179","line":1,"column":27,"nodeType":"164","messageId":"165","endLine":1,"endColumn":36},{"ruleId":"159","severity":1,"message":"160","line":37,"column":9,"nodeType":"161","endLine":37,"endColumn":78},{"ruleId":"159","severity":1,"message":"160","line":26,"column":9,"nodeType":"161","endLine":30,"endColumn":11},{"ruleId":"162","severity":1,"message":"163","line":3,"column":10,"nodeType":"164","messageId":"165","endLine":3,"endColumn":24},{"ruleId":"159","severity":1,"message":"160","line":20,"column":7,"nodeType":"161","endLine":25,"endColumn":9},{"ruleId":"180","severity":1,"message":"181","line":30,"column":3,"nodeType":"182","messageId":"183","endLine":34,"endColumn":4},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'ToastContainer' is defined but never used.","Identifier","unusedVar","'chainInfo' is assigned a value but never used.","no-control-regex","Unexpected control character(s) in regular expression: \\x0c.","Literal","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadPokemon'. Either include it or remove the dependency array.","ArrayExpression",["185"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'useState' is defined but never used.","'useEffect' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["186"],{"desc":"187","fix":"188"},{"desc":"187","fix":"189"},"Update the dependencies array to be: [loadPokemon]",{"range":"190","text":"191"},{"range":"192","text":"191"},[1735,1737],"[loadPokemon]",[1735,1737]]